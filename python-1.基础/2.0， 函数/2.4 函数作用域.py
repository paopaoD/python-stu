# @Project   : Python
# @File      : 2.4 函数作用域.py
# @Auther    : 等到秋叶金黄
# @Time      : 2022/5/26, 18:18
#

'''

    作用域：LEGB

            1,作用域：变量引起作用的范围,或者说变量起作用的范围

            2,Local 局部作用域(局部变量)：函数内部

            3,Enclosing 外部嵌套作用域：函数嵌套

            4,Global 全局作用域：模块(.py文件)内部

            5,Builtin 内部模块作用域：builtins.py文件


    变量名的查找规则：

            1,由内到外：L -> E -> G ->B
              也就是在访问变量时，先查找本地 局部变量，然后是包裹此函数
               外部的函数内部的变量，然后是全局变量，最后是内置变量

'''

#####
'''
    局部变量：
            1,定义在函数内部的变量(形参也是局部变量)
            2,只能在函数内部使用
            3,调用函数时才会创建(也就是栈帧)，函数结束后自动销毁

'''

#####
'''
    全局变量：
            1,定义在函数外部，模块内部的变量
            2,在整个模块(py文件)范围内访问(但函数内不能直接给其赋值，需要加global)



        global 语句：
                1,作用：在函数内部修改全局变量
                     在函数内部定义全局变量(全局声明)
                2,语法：
                     global 变量1，变量2 ...
                3,说明：
                     在函数内直接为全局变量赋值，视为创建新的局部变量
                     
                
'''





# 练习：记录函数的执行次数

count = 0
def fun01(a):
    a[0] = "2"
    # 使用global语句，定义全局变量
    global count
    count +=1


list01 = [1,2,3]
fun01(list01)
fun01(list01)
fun01(list01)
print("调用了{}次".format(count))








































